{
	"info": {
		"_postman_id": "1646fb9e-18a3-423d-9b68-2de568a4a143",
		"name": "TestManagement Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35071473"
	},
	"item": [
		{
			"name": "updateSubcategory",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"subcategory_id\": 9,\r\n    \"category\": {\r\n        \"category_id\": 2,\r\n        \"category_name\": \"SQL\",\r\n        \"category_description\": \"Spring Boot Framework category\"\r\n    },\r\n    \"subcategory_name\": \"Join\",\r\n    \"subcategory_description\": \"Table joins from SQL\"\r\n}{\r\n    \"subcategory_id\": 3,\r\n    \"category\": {\r\n        \"category_id\": 2,\r\n        \"category_name\": \"SQL\",\r\n        \"category_description\": \"Database SQL category\"\r\n    },\r\n    \"subcategory_name\": \"Join\",\r\n    \"subcategory_description\": \"Table joins from SQL\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/subCategory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"subCategory"
					]
				}
			},
			"response": []
		},
		{
			"name": "getCategoryById",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/category",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"category"
					]
				}
			},
			"response": []
		},
		{
			"name": "uploadexcelsheet",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/vijaya.mahajan/Downloads/QuestionBank.xlsx"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8080/api/testManagement/bulk-upload",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"testManagement",
						"bulk-upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteCategory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/category/8",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"category",
						"8"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "getAllCategory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"subcategory_id\": 5,\r\n    \"category\": {\r\n        \"category_id\": 3,\r\n        \"category_name\": \"Spring Boot\",\r\n        \"category_description\": \"Spring Boot Framework category\"\r\n    },\r\n    \"subcategory_name\": \"Exception handling\",\r\n    \"subcategory_description\": \"it is about java\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/category",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"category"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "deleteSubcategory",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/subCategory/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"subCategory",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateCategory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n          \"categoryId\":12,\n        \"categoryName\": \"java\",\n        \"categoryDescription\": \"Spring Boot Framework category\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/category",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"category"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "getAllMcqQuestion",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/testManagement",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"testManagement"
					]
				}
			},
			"response": []
		},
		{
			"name": "getMcqQuestionById",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/testManagement/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"testManagement",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "createMcqQuestion",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/vijaya.mahajan/Downloads/QuestionBank (1).xlsx"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8080/api/testManagement",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"testManagement"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateMcqQuestion",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "      {\r\n     \"question_id\":1,      \r\n\t\"category\":\"springboot\",\r\n    \"question\": \"In Spring Boot @RestController annotation is equivalent to\",\r\n    \"option_one\":\"@Controller and @PostMapping\",\r\n\t \"option_two\":\"@Controller and @Component\",\r\n\t \"option_three\":\"@Controller and @ResponseBody\",\r\n\t \"option_four\":\"@Controller and @ResponseStatus\",\r\n\t \"correct_option\":\"@Controller and @ResponseBody\",\r\n     \"positive_mark\":\"3\",\r\n     \"negative_mark\": \"-1\"\r\n}\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/testManagement",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"testManagement"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteMcqQuestion",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/testManagement/55",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"testManagement",
						"55"
					]
				}
			},
			"response": []
		},
		{
			"name": "createCategory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"categoryName\": \"Spring Boot\",\n        \"categoryDescription\": \"Spring Boot Framework category\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/category",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"category"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "updateCategory",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n          \"category_id\":1,\r\n        \"category_name\": \"Spring\",\r\n        \"category_description\": \"Spring Boot Framework category\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/category",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"category"
					]
				}
			},
			"response": []
		},
		{
			"name": "create Subcategory",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/subCategory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"subCategory"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllSubcategory",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/subCategory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"subCategory"
					]
				}
			},
			"response": []
		}
	]
}